{"remainingRequest":"/opt/lampp/htdocs/intellect/front/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/intellect/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/intellect/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/intellect/front/src/modules/editor/pages/Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/intellect/front/src/modules/editor/pages/Editor.vue","mtime":1584995277968},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/cache-loader/dist/cjs.js","mtime":1578848123391},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/babel-loader/lib/index.js","mtime":1584734931761},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/cache-loader/dist/cjs.js","mtime":1578848123391},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/vue-loader/lib/index.js","mtime":1584734932632}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1haW4gZnJvbSAnQC92aWV3cy9sYXlvdXRzL01haW4nOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBWdWVFZGl0b3IgfSBmcm9tICJ2dWUyLWVkaXRvciI7CmltcG9ydCB7IEltYWdlRHJvcCB9IGZyb20gInF1aWxsLWltYWdlLWRyb3AtbW9kdWxlIjsKaW1wb3J0IEltYWdlUmVzaXplIGZyb20gInF1aWxsLWltYWdlLXJlc2l6ZS1tb2R1bGUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkVkaXRvciIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6ICI8aDE+VGV4dG8gaW5pY2lhbDwvaDE+IiwKICAgICAgY3VzdG9tTW9kdWxlc0ZvckVkaXRvcjogW3sKICAgICAgICBhbGlhczogImltYWdlRHJvcCIsCiAgICAgICAgbW9kdWxlOiBJbWFnZURyb3AKICAgICAgfSwgewogICAgICAgIGFsaWFzOiAiaW1hZ2VSZXNpemUiLAogICAgICAgIG1vZHVsZTogSW1hZ2VSZXNpemUKICAgICAgfV0sCiAgICAgIGVkaXRvclNldHRpbmdzOiB7CiAgICAgICAgbW9kdWxlczogewogICAgICAgICAgaW1hZ2VEcm9wOiB0cnVlLAogICAgICAgICAgaW1hZ2VSZXNpemU6IHt9CiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgTWFpbjogTWFpbiwKICAgIFZ1ZUVkaXRvcjogVnVlRWRpdG9yCiAgfSwKICBtZXRob2RzOiB7CiAgICB0ZXN0ZTogZnVuY3Rpb24gdGVzdGUoKSB7CiAgICAgIGNvbnNvbGUubG9nKCJGVU5DSU9OQUROT09PTyIpOwogICAgfSwKICAgIGhhbmRsZUltYWdlQWRkZWQ6IGZ1bmN0aW9uIGhhbmRsZUltYWdlQWRkZWQoZmlsZSwgRWRpdG9yLCBjdXJzb3JMb2NhdGlvbiwgcmVzZXRVcGxvYWRlcikgewogICAgICAvLyBBbiBleGFtcGxlIG9mIHVzaW5nIEZvcm1EYXRhCiAgICAgIC8vIE5PVEU6IFlvdXIga2V5IGNvdWxkIGJlIGRpZmZlcmVudCBzdWNoIGFzOgogICAgICAvLyBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKQogICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJpbWFnZSIsIGZpbGUpOwogICAgICBjb25zb2xlLmxvZzsKICAgICAgYXhpb3MoewogICAgICAgIHVybDogImh0dHA6Ly8xMjcuMC4wLjE6MzMzMy9pbWFnZXMvdXBsb2FkIiwKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgIH0sCiAgICAgICAgZGF0YTogZm9ybURhdGEKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTsKICAgICAgICB2YXIgdXJsID0gcmVzdWx0LmRhdGEudXJsOyAvLyBHZXQgdXJsIGZyb20gcmVzcG9uc2UKCiAgICAgICAgRWRpdG9yLmluc2VydEVtYmVkKGN1cnNvckxvY2F0aW9uLCAiaW1hZ2UiLCB1cmwpOwogICAgICAgIHJlc2V0VXBsb2FkZXIoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVyci5yZXNwb25zZSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,IAAA,MAAA,sBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,QAAA,aAAA;AACA,SAAA,SAAA,QAAA,yBAAA;AACA,OAAA,WAAA,MAAA,2BAAA;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,wBADA;AAEA,MAAA,sBAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,aAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAFA,CAFA;AAMA,MAAA,cAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,SAAA,EAAA,IADA;AAEA,UAAA,WAAA,EAAA;AAFA;AADA;AANA,KAAA;AAaA,GAhBA;AAkBA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAlBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,KAHA;AAIA,IAAA,gBAAA,EAAA,0BAAA,IAAA,EAAA,MAAA,EAAA,cAAA,EAAA,aAAA,EAAA;AAEA;AACA;AACA;AAEA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA;AACA,MAAA,KAAA,CAAA;AACA,QAAA,GAAA,EAAA,qCADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,OAAA,EAAA;AACA,oBAAA,kBADA;AAEA,0BAAA;AAFA,SAHA;AAOA,QAAA,IAAA,EAAA;AAPA,OAAA,CAAA,CASA,IATA,CASA,UAAA,MAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,YAAA,GAAA,GAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAFA,CAEA;;AACA,QAAA,MAAA,CAAA,WAAA,CAAA,cAAA,EAAA,OAAA,EAAA,GAAA;AACA,QAAA,aAAA;AACA,OAdA,EAeA,KAfA,CAeA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,QAAA;AACA,OAjBA;AAkBA;AA/BA;AAvBA,CAAA","sourcesContent":["<template>\n<div>\n    <Main>\n        <template v-slot:mainpage>\n             \n               \n    <vue-editor id=\"editor\" useCustomImageHandler @image-added=\"handleImageAdded\" :customModules=\"customModulesForEditor\" :editorOptions=\"editorSettings\" v-model=\"content\"> </vue-editor>       \n    \n    <div class=\"output ql-snow\">\n\n      <div class=\"ql-editor\" v-html=\"content\"></div>\n    </div>\n    </template>\n   \n   \n   \n   \n   </Main>\n</div>\n</template>\n\n<script>\nimport Main from '@/views/layouts/Main'\nimport axios from 'axios'\nimport { VueEditor } from \"vue2-editor\";\nimport { ImageDrop } from \"quill-image-drop-module\";\nimport ImageResize from \"quill-image-resize-module\";\n\n\n\nexport default {\n    name: \"Editor\",\n    data() {\n        return {\n           content: \"<h1>Texto inicial</h1>\",\n           customModulesForEditor: [\n            { alias: \"imageDrop\", module: ImageDrop },\n            { alias: \"imageResize\", module: ImageResize }\n          ],\n      editorSettings: {\n        modules: {\n            imageDrop: true,\n            imageResize: {}\n          }\n        }\n        }\n    },     \n    \n    components: {\n        Main,\n        VueEditor,\n    \n    },\n    methods: {\n    teste(){\n        console.log(\"FUNCIONADNOOOO\")\n    },\n    handleImageAdded: function(file, Editor, cursorLocation, resetUploader) {\n        \n      // An example of using FormData\n      // NOTE: Your key could be different such as:\n      // formData.append('file', file)\n    \n      var formData = new FormData();\n      formData.append(\"image\", file);\n    console.log\n      axios({\n        url: \"http://127.0.0.1:3333/images/upload\",\n        method: \"POST\",\n        headers: {        \n        'Accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    },\n        data: formData\n      })\n        .then(result => {\n            console.log(result)\n          let url = result.data.url; // Get url from response\n          Editor.insertEmbed(cursorLocation, \"image\", url);\n          resetUploader();\n        })\n        .catch(err => {\n          console.log(err.response);\n        });\n    }\n    }\n}\n</script>\n\n"],"sourceRoot":"src/modules/editor/pages"}]}