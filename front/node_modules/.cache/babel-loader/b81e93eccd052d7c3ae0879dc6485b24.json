{"remainingRequest":"/opt/lampp/htdocs/intellect/front/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/intellect/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/intellect/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/intellect/front/src/modules/editor/pages/Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/intellect/front/src/modules/editor/pages/Editor.vue","mtime":1584735265250},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/cache-loader/dist/cjs.js","mtime":1578848123391},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/babel-loader/lib/index.js","mtime":1584734931761},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/cache-loader/dist/cjs.js","mtime":1578848123391},{"path":"/opt/lampp/htdocs/intellect/front/node_modules/vue-loader/lib/index.js","mtime":1584734932632}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgUXVpbGwgfSBmcm9tICd2dWUtcXVpbGwtZWRpdG9yJzsKaW1wb3J0IHsgSW1hZ2VFeHRlbmQsIFF1aWxsV2F0Y2ggfSBmcm9tICdxdWlsbC1pbWFnZS1leHRlbmQtbW9kdWxlJzsgLy8gaW1wb3J0IHF1aWxsRW1vamkgZnJvbSAncXVpbGwtZW1vamknCi8vIGltcG9ydCAncXVpbGwtZW1vamkvZGlzdC9xdWlsbC1lbW9qaS5jc3MnCgp2YXIgdGVzdEltYWdlQVBJID0gJ2h0dHBzOi8vZ2l0aHViLnN1cm1vbi5tZS9pbWFnZXMvJzsKdmFyIHRlc3RJbWFnZVVybCA9IHRlc3RJbWFnZUFQSSArICdiYWNrZ3JvdW5kLmpwZyc7ClF1aWxsLnJlZ2lzdGVyKCdtb2R1bGVzL0ltYWdlRXh0ZW5kJywgSW1hZ2VFeHRlbmQpOwppbXBvcnQgTWFpbiBmcm9tICdAL3ZpZXdzL2xheW91dHMvTWFpbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRWRpdG9yIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29udGVudDogIm5vdGUiLAogICAgICBlZGl0b3JPcHRpb246IHsKICAgICAgICB0aGVtZTogJ3Nub3cnLAogICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgICJlbW9qaS10b29sYmFyIjogdHJ1ZSwKICAgICAgICAgICJlbW9qaS1zaG9ydG5hbWUiOiB0cnVlLAogICAgICAgICAgdG9vbGJhcjogewogICAgICAgICAgICBjb250YWluZXI6IFtbJ2xpbmsnLCAnaW1hZ2UnLCAnZW1vamknXV0sCiAgICAgICAgICAgIGhhbmRsZXJzOiB7CiAgICAgICAgICAgICAgJ2ltYWdlJzogZnVuY3Rpb24gaW1hZ2UoKSB7CiAgICAgICAgICAgICAgICBRdWlsbFdhdGNoLmVtaXQodGhpcy5xdWlsbC5pZCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgSW1hZ2VFeHRlbmQ6IHsKICAgICAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICAgICAgbmFtZTogJ2ltZycsCiAgICAgICAgICAgIGFjdGlvbjogJ2h0dHBzOi8vZ2l0aHViLnN1cm1vbi5tZS9pbWFnZXMvJywKICAgICAgICAgICAgcmVzcG9uc2U6IGZ1bmN0aW9uIHJlc3BvbnNlKCkgewogICAgICAgICAgICAgIHJldHVybiB0ZXN0SW1hZ2VVcmw7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkVkaXRvckJsdXI6IGZ1bmN0aW9uIG9uRWRpdG9yQmx1cihxdWlsbCkgewogICAgICBjb25zb2xlLmxvZygnZWRpdG9yIGJsdXIhJywgcXVpbGwpOwogICAgfSwKICAgIG9uRWRpdG9yRm9jdXM6IGZ1bmN0aW9uIG9uRWRpdG9yRm9jdXMocXVpbGwpIHsKICAgICAgY29uc29sZS5sb2coJ2VkaXRvciBmb2N1cyEnLCBxdWlsbCk7CiAgICB9LAogICAgb25FZGl0b3JSZWFkeTogZnVuY3Rpb24gb25FZGl0b3JSZWFkeShxdWlsbCkgewogICAgICBjb25zb2xlLmxvZygnZWRpdG9yIHJlYWR5IScsIHF1aWxsKTsKICAgIH0sCiAgICBvbkVkaXRvckNoYW5nZTogZnVuY3Rpb24gb25FZGl0b3JDaGFuZ2UoX3JlZikgewogICAgICB2YXIgcXVpbGwgPSBfcmVmLnF1aWxsLAogICAgICAgICAgaHRtbCA9IF9yZWYuaHRtbCwKICAgICAgICAgIHRleHQgPSBfcmVmLnRleHQ7CiAgICAgIGNvbnNvbGUubG9nKCdlZGl0b3IgY2hhbmdlIScsIHF1aWxsLCBodG1sLCB0ZXh0KTsKICAgICAgdGhpcy5jb250ZW50ID0gaHRtbDsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBlZGl0b3I6IGZ1bmN0aW9uIGVkaXRvcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbDsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBjb25zb2xlLmxvZygndGhpcyBpcyBjdXJyZW50IHF1aWxsIGluc3RhbmNlIG9iamVjdCcsIHRoaXMuZWRpdG9yKTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE1haW46IE1haW4KICB9Cn07"},{"version":3,"sources":["Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,KAAA,QAAA,kBAAA;AACA,SAAA,WAAA,EAAA,UAAA,QAAA,2BAAA,C,CAEA;AACA;;AAEA,IAAA,YAAA,GAAA,kCAAA;AACA,IAAA,YAAA,GAAA,YAAA,GAAA,gBAAA;AAEA,KAAA,CAAA,QAAA,CAAA,qBAAA,EAAA,WAAA;AAEA,OAAA,IAAA,MAAA,sBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,MADA;AAEA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AACA,2BAAA,IADA;AAEA,6BAAA,IAFA;AAGA,UAAA,OAAA,EAAA;AACA,YAAA,SAAA,EAAA,CACA,CAAA,MAAA,EAAA,OAAA,EAAA,OAAA,CADA,CADA;AAIA,YAAA,QAAA,EAAA;AACA,uBAAA,iBAAA;AACA,gBAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA;AAHA;AAJA,WAHA;AAaA,UAAA,WAAA,EAAA;AACA,YAAA,OAAA,EAAA,IADA;AAEA,YAAA,IAAA,EAAA,KAFA;AAGA,YAAA,MAAA,EAAA,kCAHA;AAIA,YAAA,QAAA,EAAA,oBAAA;AACA,qBAAA,YAAA;AACA;AANA;AAbA;AAFA;AAFA,KAAA;AA6BA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EAAA,KAAA;AACA,KAHA;AAIA,IAAA,aAJA,yBAIA,KAJA,EAIA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,KAAA;AACA,KANA;AAOA,IAAA,aAPA,yBAOA,KAPA,EAOA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,KAAA;AACA,KATA;AAUA,IAAA,cAVA,gCAUA;AAAA,UAAA,KAAA,QAAA,KAAA;AAAA,UAAA,IAAA,QAAA,IAAA;AAAA,UAAA,IAAA,QAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA;AAbA,GAjCA;AAgDA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,aAAA,KAAA,KAAA,CAAA,aAAA,CAAA,KAAA;AACA;AAHA,GAhDA;AAqDA,EAAA,OArDA,qBAqDA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,uCAAA,EAAA,KAAA,MAAA;AACA,GAvDA;AAwDA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA;AAxDA,CAAA","sourcesContent":["<template>\n<div>\n    <Main>\n        <template v-slot:mainpage>\n             <div class=\"output ql-snow\">\n      <div class=\"title\">Output</div>\n      <div class=\"ql-editor\" v-html=\"this.content\"></div>\n    </div>\n               \n               <quill-editor\n      class=\"editor\"\n      v-model=\"content\"\n      :options=\"editorOption\"\n    />\n\n        </template>\n    </Main>\n</div>\n</template>\n\n<script>\n\n import { Quill } from 'vue-quill-editor'\n  import {  ImageExtend, QuillWatch } from 'quill-image-extend-module'\n\n  // import quillEmoji from 'quill-emoji'\n  // import 'quill-emoji/dist/quill-emoji.css'\n\n  const testImageAPI = 'https://github.surmon.me/images/'\n  const testImageUrl = testImageAPI + 'background.jpg'\n\n    Quill.register('modules/ImageExtend', ImageExtend)\n\nimport Main from '@/views/layouts/Main'\nexport default {\n    name: \"Editor\",\n    data() {\n        return {\n           content: \"note\",\n      editorOption: {\n          theme: 'snow',\n          modules: {\n            \"emoji-toolbar\": true,\n            \"emoji-shortname\": true,\n            toolbar: {\n              container: [\n                ['link', 'image', 'emoji']\n              ],\n              handlers: {\n                'image': function () {\n                  QuillWatch.emit(this.quill.id)\n                }\n              }\n            },\n            ImageExtend: {\n              loading: true,\n              name: 'img',\n              action: 'https://github.surmon.me/images/',\n              response: () => {\n                return testImageUrl\n              }\n            }\n          }\n        }\n        \n        }\n    },\n     methods: {\n      onEditorBlur(quill) {\n        console.log('editor blur!', quill)\n      },\n      onEditorFocus(quill) {\n        console.log('editor focus!', quill)\n      },\n      onEditorReady(quill) {\n        console.log('editor ready!', quill)\n      },\n      onEditorChange({ quill, html, text }) {\n        console.log('editor change!', quill, html, text)\n        this.content = html\n      }\n    },\n    computed: {\n      editor() {\n        return this.$refs.myQuillEditor.quill\n      }\n    },\n    mounted() {\n      console.log('this is current quill instance object', this.editor)\n    },\n    components: {\n        Main,\n    \n    },\n}\n</script>\n\n"],"sourceRoot":"src/modules/editor/pages"}]}